<launch>
      # Gazebo Parameters
        <arg name="paused" default="false"/>
        <arg name="use_sim_time" default="true"/>
        <arg name="gui" default="true"/>
        <arg name="headless" default="false"/>
        <arg name="debug" default="false"/>
        <arg name="verbose" default="false"/>
        <!-- <arg name="world_name" default="$(find spawn_car)/world/example.world"/> -->
        <arg name="world_name" default="$(find spawn_car)/world/simple_city.world"/>
    
        # Add sensor enable parameters
        <arg name="enable_velodyne" default="false"/>
        <arg name="enable_camera" default="false"/>
        <arg name="enable_imu" default="false"/>
        <arg name="enable_gps" default="false"/>
        <arg name="gpu" default="false"/>
        <arg name="organize_cloud" default="false"/>
    
        <include file="$(find gazebo_ros)/launch/empty_world.launch">
                <arg name="paused" value="$(arg paused)"/>
                <arg name="use_sim_time" value="$(arg use_sim_time)"/>
                <arg name="gui" value="$(arg gui)"/>
                <arg name="headless" value="$(arg headless)"/>
                <arg name="debug" value="$(arg debug)"/>
                <arg name="verbose" value="$(arg verbose)"/>
                <arg name="world_name" value="$(arg world_name)"/>
        </include>
      
        # Simulation Parameters
        <param  name="robot_description"
                command="$(find xacro)/xacro '$(find spawn_car)/model/urban/urdf/urban_description.urdf.xacro' 
                        organize_cloud:=$(arg organize_cloud) 
                        gpu:=$(arg gpu)
                        enable_velodyne:=$(arg enable_velodyne)
                        enable_camera:=$(arg enable_camera)
                        enable_imu:=$(arg enable_imu)
                        enable_gps:=$(arg enable_gps)"
        />
      
        <!-- <arg  name="model"/>
                <param    name="robot_description"
                        textfile="$(find spawn_car)/model/urban/urdf/test.urdf"
        />
   -->
        <!-- <node   pkg="joint_state_publisher_gui"
                name="joint_state_publisher_gui"
                type="joint_state_publisher_gui"
        /> -->
  
        <node   pkg="robot_state_publisher"
                name="robot_state_publisher"
                type="robot_state_publisher"
                respawn="false"
                output="screen"
        >
                <param
                        name="publish_frequency"
                        type="double"
                        value="30"
                />
                
                <!-- <remap from="/joint_states" to="/urban_model/joint_states" /> -->
        </node>
  
        <node   name="urdf_spawner"
                pkg="gazebo_ros"
                type="spawn_model"
                respawn="false"
                output="screen"
                required="false"
                args="-urdf -param robot_description -model urban_model -x -14.0 -y -1.85 -z 6.0 -R 0.0 -P 0.0 -Y 0.0"
        />


        <!-- load the controllers -->
        <rosparam       file="$(find spawn_car)/model/urban/config/controller.yaml" command="load"/>

        <node   name="controller_spawner" 
                pkg ="controller_manager" 
                type="spawner" 
                respawn="true"
                output="screen"
                ns="/urban_model"
                args="steer_controller left_motor_controller right_motor_controller"
        >
                <param name="wait_for_topic" value="/gazebo/model_states"/>
        </node>
  
        <node   pkg="nodelet" 
                type="nodelet" 
                name="standalone_nodelet"  
                args="manager" 
                output="screen"
                required="true"
        />
  
        <node   pkg="nodelet" 
                type="nodelet" 
                name="CarSimulatorVehicleInterface" 
                args="load car_bridge/CarSimulatorVehicleInterface standalone_nodelet" 
                output="screen">
        </node>
        
        <node   pkg="rviz"
                name="rviz"
                type="rviz"
                args = "-d $(find spawn_car)/rviz/urban.rviz">
                <param name="wait_for_topic" value="/urban_model/joint_states"/>
                <param name="wait_for_topic" value="/tf"/>
        </node>


  </launch>  
  