urban_model:
    # based on https://wiki.ros.org/ros_control this controller reads the state 
    # of all the joints
    joint_state_controller:
        type: joint_state_controller/JointStateController
        publish_rate: 20

    # left_steer_controller:
    #     #this controller recieves position and via PID it takes care of the effort
    #     # needed to move the joint. based on https://wiki.ros.org/ros_control
    #     # type: position_controllers/JointPositionController
    #     #type: velocity_controllers/JointVelocityController
    #     type: velocity_controllers/JointPositionController
    #     joint: front_left_steer_joint
    #     pid: {p: 1.0, i: 0.0, d: 0.0}
    
    # right_steer_controller:
    #     #this controller recieves position and via PID it takes care of the effort
    #     # needed to move the joint. based on https://wiki.ros.org/ros_control
    #     # type: position_controllers/JointPositionController
    #     #type: velocity_controllers/JointVelocityController
    #     type: velocity_controllers/JointPositionController
    #     joint: front_right_steer_joint
    #     pid: {p: 1.0, i: 0.0, d: 0.0}


    steer_controller:
        type: "position_controllers/JointTrajectoryController"
        joints:
            - front_left_steer_joint
            - front_right_steer_joint
        gains:
            front_left_steer_joint: {p: 100.0, i: 0.01, d: 10.0}
            front_right_steer_joint: {p: 100.0, i: 0.01, d: 10.0}
        constraints:
            stopped_velocity_tolerance: 0.01
            goal_time: 0.5

    # throttle_controller:
    #     type: "diff_drive_controller/DiffDriveController"
    #     left_wheel: 'rear_right_wheel_joint'
    #     right_wheel: 'rear_left_wheel_joint'
    #     pose_covariance_diagonal: [0.001, 0.001, 1000000.0, 1000000.0, 1000000.0, 1000.0]
    #     twist_covariance_diagonal: [0.001, 0.001, 1000000.0, 1000000.0, 1000000.0, 1000.0]

    left_motor_controller:
        #this controller recieves position and via PID it takes care of the effort
        # needed to move the joint. based on https://wiki.ros.org/ros_control
        # type: position_controllers/JointPositionController
        #type: velocity_controllers/JointVelocityController
        type: effort_controllers/JointEffortController
        joint: rear_left_wheel_joint
        pid: {p: 100.0, i: 0.01, d: 10.0}
    
    right_motor_controller:
        #this controller recieves position and via PID it takes care of the effort
        # needed to move the joint. based on https://wiki.ros.org/ros_control
        # type: position_controllers/JointPositionController
        #type: velocity_controllers/JointVelocityController
        type: effort_controllers/JointEffortController
        joint: rear_right_wheel_joint
        pid: {p: 100.0, i: 0.01, d: 10.0}

    gazebo_ros_control:
        pid_gains:
            front_left_steer_joint: {p: 100.0, i: 0.01, d: 10.0}
            front_right_steer_joint: {p: 100.0, i: 0.01, d: 10.0}
            rear_left_wheel_joint: {p: 100.0, i: 0.01, d: 10.0}
            rear_right_wheel_joint: {p: 100.0, i: 0.01, d: 10.0}
    