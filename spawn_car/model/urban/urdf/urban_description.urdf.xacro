<?xml version="1.0"?>

<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="urban"> 

    <xacro:arg name="gpu" default="false"/>
    <xacro:property name="gpu" value="$(arg gpu)" />
    <xacro:arg name="organize_cloud" default="false"/>
    <xacro:property name="organize_cloud" value="$(arg organize_cloud)" />
    <xacro:arg name="enable_velodyne" default="false"/>
    <xacro:property name="enable_velodyne" value="$(arg enable_velodyne)"/>
    <xacro:arg name="enable_camera" default="false"/>
    <xacro:property name="enable_camera" value="$(arg enable_camera)"/>
    <xacro:arg name="enable_imu" default="false"/>
    <xacro:property name="enable_imu" value="$(arg enable_imu)"/>
    <xacro:arg name="enable_gps" default="false"/>
    <xacro:property name="enable_gps" value="$(arg enable_gps)"/>

  <!-- *************** -->
    <!-- Include -->
    <!-- *************** -->
    <xacro:include filename="$(find spawn_car)/model/urban/urdf/bases/urban_body.urdf.xacro"/>
    <xacro:include filename="$(find spawn_car)/model/urban/urdf/wheels/urban_suspension.urdf.xacro"/>
    <xacro:include filename="$(find spawn_car)/model/urban/urdf/vehicle_properties.urdf.xacro"/>
    <xacro:include filename="$(find spawn_car)/model/urban/urdf/sensors/camera.urdf.xacro"/>
    <xacro:include filename="$(find spawn_car)/model/urban/urdf/sensors/vlp-16.urdf.xacro"/>
    <xacro:include filename="$(find spawn_car)/model/urban/urdf/sensors/_d435.urdf.xacro"/>
    <xacro:include filename="$(find spawn_car)/model/urban/urdf/sensors/imu.urdf.xacro"/>
    <xacro:include filename="$(find spawn_car)/model/urban/urdf/sensors/gps.urdf.xacro"/>
    <xacro:include filename="$(find spawn_car)/model/urban/urdf/materials.urdf.xacro"/>

    <!-- *************** -->
    <!-- Robots Elements -->
    <!-- *************** -->
    <xacro:urban_base name="urban"/>
    <xacro:Front_Right_Wheel/>
    <xacro:Front_Left_Wheel/>
    <xacro:Rear_Right_Wheel/>
    <xacro:Rear_Left_Wheel/>

    <!-- Conditional sensor loading -->
    <xacro:if value="${enable_velodyne}">
        <xacro:VLP-16 parent="chassis" name="velodyne" topic="/velodyne_points" organize_cloud="${organize_cloud}" hz="10" samples="440" gpu="${gpu}">
            <origin xyz="0.3 0 1.30" rpy="0 0 0" />
        </xacro:VLP-16>
    </xacro:if>

    <xacro:if value="${enable_camera}">
        <xacro:sensor_d435 name="camera" topics_ns="camera" parent="chassis" publish_pointcloud="true">
            <origin xyz="0.8 0 0.4" rpy="0 0 0" />
        </xacro:sensor_d435>
    </xacro:if>

    <xacro:if value="${enable_imu}">
        <xacro:imu_sensor parent="chassis" name="imu">
            <origin xyz="0 0 0.5" rpy="0 0 0"/>
        </xacro:imu_sensor>
    </xacro:if>

    <xacro:if value="${enable_gps}">
        <xacro:gps_sensor parent="chassis" name="gps">
            <origin xyz="0 0 0.6" rpy="0 0 0"/>
        </xacro:gps_sensor>
    </xacro:if>


      <gazebo>
        <plugin name="p3d" filename="libgazebo_ros_p3d.so">
          <bodyName>chassis</bodyName>
          <topicName>base_pose_ground_truth</topicName>
          <frameName>map</frameName>
          <updateRate>100.0</updateRate>
        </plugin>
      </gazebo>

      <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
          <robotNamespace>/urban_model</robotNamespace>
          <!--The two lines below came from: https://answers.ros.org/question/292444/gazebo_ros_control-plugin-gazeboroscontrolplugin-missing-legacymodens-defaultrobothwsim/-->
          <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
          <legacyModeNS>true</legacyModeNS>
        </plugin>
      </gazebo>
  
      <transmission name="front_left_steer_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <actuator name="left_steer">
          <mechanicalReduction>1</mechanicalReduction>
        </actuator>
          <joint name="front_left_steer_joint">

          <!--this is a  mechanism for ros_control, it can be position, velocity, effort or something
              to communicate with hardware. See: https://wiki.ros.org/ros_control-->
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
          </joint>
      </transmission>
      
      <transmission name="front_right_steer_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <actuator name="right_steer">
          <mechanicalReduction>1</mechanicalReduction>
        </actuator>
          <joint name="front_right_steer_joint">
            <hardwareInterface>hardware_interface/PositionJointInterface</hardwareInterface>
          </joint>
      </transmission>

      <transmission name="rear_left_wheel_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <actuator name="rear_left_motor">
          <mechanicalReduction>1</mechanicalReduction>
        </actuator>
          <joint name="rear_left_wheel_joint">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
          </joint>
      </transmission>
      
      <transmission name="rear_right_wheel_trans">
        <type>transmission_interface/SimpleTransmission</type>
        <actuator name="rear_right_motor">
          <mechanicalReduction>1</mechanicalReduction>
        </actuator>
          <joint name="rear_right_wheel_joint">
            <hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
          </joint>
      </transmission>
</robot>